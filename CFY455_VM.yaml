tosca_definitions_version: cloudify_dsl_1_3

imports:
#  - http://www.getcloudify.org/spec/cloudify/4.2/types.yaml
#  - http://www.getcloudify.org/spec/openstack-plugin/2.4.1/plugin.yaml
#  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-diamond-plugin/1.3.5/plugin.yaml
#  - https://github.com/cloudify-incubator/cloudify-utilities-plugin/releases/download/1.9.0/plugin.yaml

  - http://www.getcloudify.org/spec/cloudify/4.5/types.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-diamond-plugin
  - plugin:cloudify-utilities-plugin
  - types/oib_openstack.yaml
  - components/ovs/types.yaml
  - components/CentOS7/types.yaml
  - components/HubSpot/types.yaml

inputs:

  customer_token:
    type: string
    default: "AA"

  plugins_repo:
    type: string
    default: "https://storage.reading-a.openstack.memset.com:8080/swift/v1/ca0c4540c8f84ad3917c40b432a49df8/Plugins/"


  customer_name:
    type: string
    default: 'MrCustomer'

  customer_email:
    type: string
    default: test@cloudify.co

  hubspot_portal:
    type: string
    default: "1918719"

  hubspot_form:
    type: string
    default: 74f1a2ca-923d-4eae-aa9e-e0b810788d56

  oib_volume_type:
    type: string
    default: 'HighPerformance'

  vm_image_id:
    type: string
    default: { get_secret : UbuntuImageID }

  vm_flavor_id:
    type: string
    default: { get_secret : HugeFlavorID } # 36CPU 128GBRAM

  manager_image_id:
    type: string
    default: { get_secret : CFY455ImageID }

  manager_flavor_id:
    type: string
    default: '38ae7f93-4a27-4511-be01-f81b82f65d95' # 6CPU 8GBRAM 40GB

  agent_user:
    type: string
    default: 'centos'

  lab_security_group_name:
    type: string
    default: 'lab_sg'

  mgmt_network:
    type: string
    default: { get_secret : private_network_name }

  use_analytics:
    type: integer
    default: 1

  use_guides:
    type: integer
    default: 1


dsl_definitions:

  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }


node_templates:

##
## Hub spot integration
##################

  hs_registration:
    type: hubspot.form.Submit
    properties:
      portal_id: { get_input: hubspot_portal }
      form_guid: { get_input: hubspot_form }
      params:
              FirstName:  { get_input: customer_name }
              LastName: " "
              Email: { get_input: customer_email }


##
## Servers
##################


  cfy_manager:
    type: oib.nodes.MonitoredServer
    properties:
      openstack_config: *openstack_config
      management_network_name: { get_property: [ mgmt_network, resource_id ] }
      server:
        image: { get_input: manager_image_id }
        flavor: { get_input: manager_flavor_id }
      cloudify_agent:
        user: { get_input: agent_user }
        key:  { get_secret: training_key_private }
    interfaces:
    relationships:
      - target: lab_security_group
        type: cloudify.openstack.server_connected_to_security_group
      - target: training_keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: manager_volume
        type: cloudify.relationships.connected_to
      - target: lab_floating_ip
        type: cloudify.openstack.server_connected_to_floating_ip

  vm_master:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      management_network_name: { get_property: [ mgmt_network, resource_id ] }
      server:
        image: { get_input: vm_image_id }
        flavor: { get_input: manager_flavor_id }
      agent_config:
        install_method: none
    interfaces:
    relationships:
      - target: lab_security_group
        type: cloudify.openstack.server_connected_to_security_group
      - target: training_keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: vm_master_ip
        type: cloudify.openstack.server_connected_to_floating_ip
      - target: master_volume
        type: cloudify.relationships.connected_to

  vm_node:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *openstack_config
      management_network_name: { get_property: [ mgmt_network, resource_id ] }
      server:
        image: { get_input: vm_image_id }
        flavor: { get_input: vm_flavor_id }
      agent_config:
        install_method: none
    interfaces:
    relationships:
      - target: lab_security_group
        type: cloudify.openstack.server_connected_to_security_group
      - target: training_keypair
        type: cloudify.openstack.server_connected_to_keypair
      - target: vm_node_ip
        type: cloudify.openstack.server_connected_to_floating_ip
      - target: node_volume
        type: cloudify.relationships.connected_to



##
## Infra
##################
  training_keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      private_key_path: { get_secret: training_key_private }
      use_external_resource: True
      resource_id: Training
      openstack_config: *openstack_config

  lab_keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      private_key_path: { get_secret: agent_key_private }
      use_external_resource: True
      resource_id: lab_keypair
      openstack_config: *openstack_config


  manager_volume:
    type: cloudify.openstack.nodes.Volume
    properties:
      openstack_config: *openstack_config
      volume:
        size: 40
        imageRef: { get_input: manager_image_id }
        volume_type: { get_input: oib_volume_type }
      boot: true

  master_volume:
    type: cloudify.openstack.nodes.Volume
    properties:
      openstack_config: *openstack_config
      volume:
        size: 80
        imageRef: { get_input: vm_image_id }
        volume_type: { get_input: oib_volume_type }
      boot: true

  node_volume:
    type: cloudify.openstack.nodes.Volume
    properties:
      openstack_config: *openstack_config
      volume:
        size: 160
        imageRef: { get_input: vm_image_id }
        volume_type: { get_input: oib_volume_type }
      boot: true



  lab_floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_secret: external_network_name }

  vm_master_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_secret: external_network_name }

  vm_node_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *openstack_config
      floatingip:
        floating_network_name: { get_secret: external_network_name }

  lab_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *openstack_config
      use_external_resource: True
      resource_id: { get_input: lab_security_group_name }

  mgmt_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *openstack_config
      use_external_resource: true
      resource_id: { get_input : mgmt_network }

##
## SDN
################

#  sdn_sw_manager:
#    type:   ovs.nodes.centos_vswitch
#    properties:
#      ipaddr: 10.10.25.15
#      netmask: 255.255.255.0
#    relationships:
#      - target: cfy_manager
#        type: cloudify.relationships.contained_in
#      - target: sdn_sw_oib_server
#        type: ovs.relationships.vswitch_gre

#  sdn_sw_vm:
#    type:  ovs.nodes.centos_vswitch
#    properties:
#      use_external_resource: True
#      resource_id: br-mng
#    relationships:
#      - target: vm_server
#        type: cloudify.relationships.contained_in

##
##  Content Related
##############################


  external_network:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation:  components/CFYManager43/scripts/add_external_network.sh
          inputs:
            public_ip: { get_attribute: [ lab_floating_ip, floating_ip_address ] }
            private_ip: { get_attribute: [ cfy_manager , ip] }
            use_sudo: true
    relationships:
      - target: cfy_manager
        type: cloudify.relationships.contained_in


  analytics:
    type: cloudify.nodes.ApplicationModule
    capabilities:
      scalable:
        properties:
          default_instances: { get_input: use_analytics }
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: components/CFYManager4x/install_analytics.sh
    relationships:
      - target: cfy_manager
        type: cloudify.relationships.contained_in

  cfy_manager_vm_configure:
    type: cloudify.nodes.ApplicationModule
    capabilities:
      scalable:
        properties:
          default_instances: { get_input: use_analytics }
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: components/CFYManager45/manager_vm_configure.sh
          inputs:
            k8s_master_ip: { get_attribute: [ vm_master_ip, floating_ip_address ] }
            k8s_node_ip: { get_attribute: [ vm_node_ip, floating_ip_address ] }
    relationships:
      - target: cfy_manager
        type: cloudify.relationships.contained_in

outputs:

  integration:
    value:
      manager: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/dashboard" ] }
      composer: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/composer" ] }
      iaas_dash: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/dashboard" ] }
      vpn_file:  { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/vpn/client.ovpn" ] }
      ssh_ip:  { get_attribute: [ lab_floating_ip, floating_ip_address ] }
      ssh_user: "centos"

  lab_env:
    description: OpenStack Cloudify Lab
    value:
      video: https://www.youtube.com/embed/psJhdw78kkw
      suspend: false

  lab_ui_outputs:
    value:
      - title: 'Cloudify Manager'
        open: yes
        items:
          - name: 'Cloudify Manager Credentials'
            value: 'username: admin password: admin'
          - name: 'Cloudify Manager Link'
            value: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/" ] }
          - name: 'CLI command'
            value: { concat: ["cfy profiles use " , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, " -u admin -p admin -t default_tenant" ] }
          - name: 'IP Address'
            value:  { get_attribute: [ lab_floating_ip, floating_ip_address ] }
          - name: 'ssh user'
            value: 'centos'
          - name: 'ssh Private Key'
            value: 'https://s3-eu-west-1.amazonaws.com/cloudify-labs/cert/training.rsa'
          - name: 'ssh Public Key'
            value: 'https://s3-eu-west-1.amazonaws.com/cloudify-labs/cert/training.rsa.pub'

      - title: 'Virtual Machines'
        open: no
        items:
          - name: 'Master IP Adresss'
            value: { get_attribute: [ vm_master_ip, floating_ip_address ] }
          - name: 'Node IP Adresss'
            value: { get_attribute: [ vm_node_ip, floating_ip_address ] }
          - name: 'ssh user'
            value: 'ubuntu'
          - name: 'ssh Private Key'
            value: 'https://s3-eu-west-1.amazonaws.com/cloudify-labs/cert/training.rsa'
          - name: 'ssh Public Key'
            value: 'https://s3-eu-west-1.amazonaws.com/cloudify-labs/cert/training.rsa.pub'
