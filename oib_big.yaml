tosca_definitions_version: cloudify_dsl_1_3

imports:

  - http://www.getcloudify.org/spec/cloudify/3.4/types.yaml 
  - http://www.getcloudify.org/spec/openstack-plugin/1.5/plugin.yaml 
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.3/plugin.yaml 
  - types/aios.yaml

inputs:

  image_id:
    type: string
    default: '87db76ee-cb31-4f98-8818-6581eb5a3d8e'

  flavor_id:
    type: string
    default: 'c871d2fc-c6df-41ab-8a89-6ddc5d8137d0'

  agent_user:
    type: string
    default: 'centos'

  lab_security_group_name:
    type: string
    default: 'lab_sg'


node_templates:


  lab_floating_ip:
    type: cloudify.openstack.nodes.FloatingIP

  lab_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      use_external_resource: True
      resource_id: { get_input: lab_security_group_name }

  lab_server:
    type: aios.nodes.MonitoredServer
    properties:
      server:
        image: { get_input: image_id }
        flavor: { get_input: flavor_id }
      cloudify_agent:
        user: { get_input: agent_user }
    interfaces:
      maintenance:
        suspend:
          implementation: scripts/suspend.py
          executor: central_deployment_agent
        resume:
          implementation: scripts/resume.py
          executor: central_deployment_agent
    relationships:
      - target: lab_floating_ip
        type: cloudify.openstack.server_connected_to_floating_ip
      - target: lab_security_group
        type: cloudify.openstack.server_connected_to_security_group

  openstack_plugin:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      lifesycle:
        create:
          implementation: scripts/openstack_plugin_install.sh
          executor: central_deployment_agent


  rproxy:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/proxy_install.sh
          inputs:
            public_ip: { get_attribute: [ lab_floating_ip, floating_ip_address ] }
        start:
          implementation: scripts/proxy_start.sh
    relationships:
      - target: lab_server
        type: cloudify.relationships.contained_in

  catalog:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/catalog_install.sh
          inputs:
            public_ip: { get_attribute: [ lab_floating_ip, floating_ip_address ] }
    relationships:
      - target: lab_server
        type: cloudify.relationships.contained_in


  webconsole:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/webc_install.sh
    relationships:
      - target: lab_server
        type: cloudify.relationships.contained_in


  vpn:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        configure:
          implementation: scripts/vpn_configure.sh
          inputs:
            public_ip: { get_attribute: [ lab_floating_ip, floating_ip_address ] }
    relationships:
      - target: lab_server
        type: cloudify.relationships.contained_in

###
# Visual nodes


  openstack:
    type: cloudify.nodes.ApplicationServer
    relationships:
      - target: lab_server
        type: cloudify.relationships.contained_in

  cloudify:
    type: cloudify.nodes.ApplicationModule
    relationships:
      - target: openstack
        type: cloudify.relationships.contained_in

outputs:

  Cloudify_Manager_URL:
    description: Cloudify Manager URL
    value: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/" ] }


  Catalog_App_URL:
    description: Blueprint Catalog URL
    value: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/catalog" ] }

  Openstack_Dashboard_URL:
    description: Openstach Horizon URL
    value: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/dashboard" ] }

  WebConsole_URL:
    description: WebConsole
    value: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/webc" ] }

  WebConsole_Credentials:
    description: Web Console Auth
    value: "Login: cloudify Password: Se010203!"

  OpenVPN_EndPoint_IP:
    description: VPN end point IP
    value: { get_attribute: [ lab_floating_ip, floating_ip_address ] }

  OpenVPN_Configuration:
    description: Configuration Download
    value: { concat: ["http://" , { get_attribute: [ lab_floating_ip, floating_ip_address ] }, "/vpn/client.ovpn" ] }